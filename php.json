{
  // Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "déclare l'attribut strict à 1": {
    "prefix": "declstr",
    "body": ["declare(strict_types=1);", "$2"],
    "description": "déclare l'attribut strict à 1"
  },
  "classe PHP": {
    "prefix": "c",
    "body": [
      "namespace ${1}${TM_DIRECTORY/^.+\\\\([^\\\\]+)\\\\?$/$1/};",
      "",
      "class ${TM_FILENAME/(.*)\\.[^\\.]+$/$1/} ${2:extends ${3:Parent}} ${4:implements ${5:Interface}}{",
      "    $0",
      "}"
    ],
    "description": "classe PHP"
  },
  "methode PHP": {
    "prefix": "pf",
    "body": [
      "${1|public,protected,private|} ${2:static} function $3",
      "{",
      "    $0",
      "}"
    ],
    "description": "méthode PHP"
  },
  "propriete PHP": {
    "prefix": "pp",
    "body": [
      "/**",
      " * ${2}",
      " * @var ${3:mixed}",
      " **/",
      "${1|public,protected,private|} $${2:property};"
    ],
    "description": "propriété PHP"
  },
  "propriete PHP avec getter et setter": {
    "prefix": "ppgs",
    "body": [
      "/**",
      " * ${2}",
      " * @var ${3}",
      " **/",
      "${1|protected,private|} $${2:property};",
      "",
      "public function get${2}(): $3",
      "{",
      "    return $this->$2;",
      "}",
      "",
      "public function set${2}($3 $$2): self",
      "{",
      "    $this->$2 = $$2;",
      "    return $this;",
      "}",
      ""
    ],
    "description": "propriété PHP avec getter et setter"
  }
}
